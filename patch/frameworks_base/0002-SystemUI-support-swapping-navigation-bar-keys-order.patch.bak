From b5c3f9b0c0c566eceee1e0e53b7a1d926d10c433 Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Thu, 5 Oct 2017 15:05:41 +0000
Subject: [PATCH 2/2] SystemUI: support swapping navigation bar keys order

* Use new API from SystemUI tuner that allows inflate
  custom layout on the fly.

TODO> Allow SystemUI Tuner to override this when enabled and changes
      are made after enabling it. When disabling the tuner then use
      default arrangement and apply swap only.

Change-Id: Ib1993140eb1bf7dc0017d75015516db95ce70d9a
Signed-off-by: Carlo Savignano <carlosavignano@aospa.co>
Signed-off-by: Alex Naidis <alex.naidis@linux.com>
---
 core/java/android/provider/Settings.java           |  8 +++++
 packages/SystemUI/res/values/custom_config.xml     |  3 ++
 .../statusbar/phone/NavigationBarFragment.java     |  4 +++
 .../statusbar/phone/NavigationBarInflaterView.java | 15 ++++++++++
 .../statusbar/phone/NavigationBarView.java         |  9 ++++++
 .../systemui/statusbar/phone/StatusBar.java        | 34 ++++++++++++++++++++++
 6 files changed, 73 insertions(+)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 9bb3dfb..a154aad 100755
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -3933,6 +3933,14 @@ public final class Settings {
 
         /**
          * Change volume up and down handlign based on rotation
+         * Whether user can swap navigation lateral keys.
+         * <p>
+         * Type: int (0 for false, 1 for true)
+         * @hide
+         */
+        public static final String SWAP_NAVIGATION_KEYS = "swap_navigation_keys";
+
+        /**
          * @hide
          */
         public static final String SWAP_VOLUME_BUTTONS = "swap_volume_buttons";
diff --git a/packages/SystemUI/res/values/custom_config.xml b/packages/SystemUI/res/values/custom_config.xml
index f26c9d3..c8819b7 100644
--- a/packages/SystemUI/res/values/custom_config.xml
+++ b/packages/SystemUI/res/values/custom_config.xml
@@ -26,5 +26,8 @@
         adb_network
     </string>
 
+    <!-- Nav bar button swapped ordering/layout -->
+    <string name="config_navBarLayoutSwapped" translatable="false">menu_ime,recent;home;back,space</string>
+
 </resources>
 
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
index 5a3502c..856f6b3 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarFragment.java
@@ -134,6 +134,9 @@ public class NavigationBarFragment extends Fragment implements Callbacks {
     private boolean mOmniSwitchRecents;
     private int mLongPressOnAppSwitchBehavior;
 
+    // Enable swapped naviagtion keys.
+    protected boolean mUseSwapKey = false;
+
     // ----- Fragment Lifecycle Callbacks -----
 
     @Override
@@ -389,6 +392,7 @@ public class NavigationBarFragment extends Fragment implements Callbacks {
     }
 
     private void prepareNavigationBarView() {
+        mNavigationBarView.setSwapKeys(mUseSwapKey);
         mNavigationBarView.reorient();
 
         ButtonDispatcher recentsButton = mNavigationBarView.getRecentsButton();
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarInflaterView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarInflaterView.java
index 720ca14..bc2b008 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarInflaterView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarInflaterView.java
@@ -88,6 +88,7 @@ public class NavigationBarInflaterView extends FrameLayout
     private View mLastLandscape;
 
     private boolean mAlternativeOrder;
+    private boolean mSwappedOrder;
 
     public NavigationBarInflaterView(Context context, AttributeSet attrs) {
         super(context, attrs);
@@ -130,6 +131,9 @@ public class NavigationBarInflaterView extends FrameLayout
     }
 
     protected String getDefaultLayout() {
+        if (mSwappedOrder) {
+            return mContext.getString(R.string.config_navBarLayoutSwapped);
+        }
         return mContext.getString(R.string.config_navBarLayout);
     }
 
@@ -189,6 +193,17 @@ public class NavigationBarInflaterView extends FrameLayout
         }
     }
 
+    public void setSwappedOrder(boolean swappedOrder) {
+        if (swappedOrder != mSwappedOrder) {
+            mSwappedOrder = swappedOrder;
+            updateSwappedOrder();
+        }
+    }
+
+    private void updateSwappedOrder() {
+        onTuningChanged(NAV_BAR_VIEWS, getDefaultLayout());
+    }
+
     private void initiallyFill(ButtonDispatcher buttonDispatcher) {
         addAll(buttonDispatcher, (ViewGroup) mRot0.findViewById(R.id.ends_group));
         addAll(buttonDispatcher, (ViewGroup) mRot0.findViewById(R.id.center_group));
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
index 0557cb1..6584c70 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NavigationBarView.java
@@ -97,6 +97,8 @@ public class NavigationBarView extends FrameLayout implements PluginListener<Nav
     private DeadZone mDeadZone;
     private final NavigationBarTransitions mBarTransitions;
 
+    private boolean mSwapKeys;
+
     // workaround for LayoutTransitions leaving the nav buttons in a weird state (bug 5549288)
     final static boolean WORKAROUND_INVALID_LAYOUT = true;
     final static int MSG_CHECK_INVALID_LAYOUT = 8686;
@@ -245,6 +247,12 @@ public class NavigationBarView extends FrameLayout implements PluginListener<Nav
         notifyVerticalChangedListener(mVertical);
     }
 
+    public void setSwapKeys(boolean swapKeys) {
+        if (swapKeys != mSwapKeys) {
+            mSwapKeys = swapKeys;
+        }
+    }
+
     @Override
     public boolean onTouchEvent(MotionEvent event) {
         if (mGestureHelper.onTouchEvent(event)) {
@@ -591,6 +599,7 @@ public class NavigationBarView extends FrameLayout implements PluginListener<Nav
         }
         mCurrentView = mRotatedViews[rot];
         mCurrentView.setVisibility(View.VISIBLE);
+        mNavigationInflaterView.setSwappedOrder(mSwapKeys);
         mNavigationInflaterView.setAlternativeOrder(rot == Surface.ROTATION_90);
         for (int i = 0; i < mButtonDispatchers.size(); i++) {
             mButtonDispatchers.valueAt(i).setCurrentView(mCurrentView);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index 438df12..f2c2ff6 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -537,6 +537,22 @@ public class StatusBar extends SystemUI implements DemoMode,
         }
     };
 
+    final private ContentObserver mSwapNavKeyObserver = new ContentObserver(mHandler) {
+        @Override
+        public void onChange(boolean selfChange) {
+            boolean wasUsing = mUseSwapKey;
+            mUseSwapKey = Settings.System.getIntForUser(
+                    mContext.getContentResolver(), Settings.System.SWAP_NAVIGATION_KEYS, 0,
+                    UserHandle.USER_CURRENT) != 0;
+            Log.d(TAG, "navbar is " + (mUseSwapKey ? "swapped" : "regular"));
+            if (wasUsing != mUseSwapKey) {
+                if (mNavigationBarView != null) {
+                    mNavigationBar.prepareNavigationBarView();
+                }
+            }
+        }
+    };
+
     private int mInteractingWindows;
     private boolean mAutohideSuspended;
     private int mStatusBarMode;
@@ -1011,6 +1027,8 @@ public class StatusBar extends SystemUI implements DemoMode,
         mScreenPinningRequest = new ScreenPinningRequest(mContext);
         mFalsingManager = FalsingManager.getInstance(mContext);
 
+        mSwapNavKeyObserver.onChange(true); // set up
+
         Dependency.get(ActivityStarterDelegate.class).setActivityStarterImpl(this);
 
         mConfigurationListener = new ConfigurationListener() {
@@ -1290,6 +1308,10 @@ public class StatusBar extends SystemUI implements DemoMode,
         // disable profiling bars, since they overlap and clutter the output on app windows
         ThreadedRenderer.overrideProperty("disableProfileBars", "true");
 
+
+        // Listen for SWAP_NAVIGATION_KEYS setting (per-user)
+        resetSwapNavKeyObserver();
+
         // Private API call to make the shadows look better for Recents
         ThreadedRenderer.overrideProperty("ambientRatio", String.valueOf(1.5f));
     }
@@ -3787,6 +3809,15 @@ public class StatusBar extends SystemUI implements DemoMode,
         mLockscreenWallpaper.setCurrentUser(newUserId);
         mScrimController.setCurrentUser(newUserId);
         updateMediaMetaData(true, false);
+        resetSwapNavKeyObserver();
+    }
+
+    private void resetSwapNavKeyObserver() {
+        mContext.getContentResolver().unregisterContentObserver(mSwapNavKeyObserver);
+        mSwapNavKeyObserver.onChange(false);
+        mContext.getContentResolver().registerContentObserver(
+                Settings.System.getUriFor(Settings.System.SWAP_NAVIGATION_KEYS), true,
+                mSwapNavKeyObserver, mCurrentUserId);
     }
 
     /**
@@ -5328,6 +5359,9 @@ public class StatusBar extends SystemUI implements DemoMode,
     protected boolean mHeadsUpTicker = false;
     protected boolean mDisableNotificationAlerts = false;
 
+    // Enable swapped naviagtion keys.
+    protected boolean mUseSwapKey = false;
+
     protected DevicePolicyManager mDevicePolicyManager;
     protected PowerManager mPowerManager;
     protected StatusBarKeyguardViewManager mStatusBarKeyguardViewManager;
-- 
1.8.3.1

